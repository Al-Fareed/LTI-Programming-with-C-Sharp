https://github.com/gayat19/Dotnet22Mar2023.git



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApp
{
    internal class Employee
    {
        internal int something;
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public Employee()//Default constructor
        {
            
        }
        public Employee(int id, string name, int age) //Parameterized constructor
        {
            Id = id;
            Name = name;
            Age = age;
        }
        internal void PrintEmployeeDetails()
        {
            Console.WriteLine("Employee id : {0} Employee name : {1} Employee Age {2}",Id,Name,Age);
        }

    }
}
---------------------
namespace UnderstandingOOPSApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Employee employee = new Employee(101,"Ramu",23);
            employee.PrintEmployeeDetails();
            
        }
    }
}
---------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApp
{
    internal class Employee
    {
        internal int something;
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public Employee()//Default constructor
        {
            
        }
        public Employee(int id, string name, int age) //Parameterized constructor
        {
            Id = id;
            Name = name;
            Age = age;
        }
        internal void PrintEmployeeDetails()
        {
            Console.WriteLine("Employee id : {0} Employee name : {1} Employee Age {2}",Id,Name,Age);
        }
        internal void UpdateAge(ref int age)
        {
            age++;
            Age = age;
            
            Console.WriteLine("Age updated");
        }

    }
}
namespace UnderstandingOOPSApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int eage = 0;
            Console.WriteLine("Please enter the new age");
            eage = Convert.ToInt32(Console.ReadLine());
            Employee employee = new Employee(101,"Ramu",23);
            employee.UpdateAge( ref eage);
            employee.PrintEmployeeDetails();
            Console.WriteLine("Age after the method call in t he calling method "+eage);
        
    }
}                     
------------------------------
namespace UnderstandingOOPSApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //int eage = 0;
            //Console.WriteLine("Please enter the new age");
            //eage = Convert.ToInt32(Console.ReadLine());
            Employee employee = new Employee(101, "Ramu", 23);
            employee.PrintEmployeeDetails();
            string data;
            bool res = employee.CheckAge(out data);
            Console.WriteLine("The employee's age is eligible for work "+res);
            Console.WriteLine(data);
            //employee.UpdateAge( ref eage);

            // Console.WriteLine("Age after the method call in t he calling method "+eage);



        }
    }
}
--------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApp
{
    internal class Employee
    {
        internal int something;
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public Employee()//Default constructor
        {
            
        }
        public Employee(int id, string name, int age) //Parameterized constructor
        {
            Id = id;
            Name = name;
            Age = age;
        }
        internal void PrintEmployeeDetails()
        {
            Console.WriteLine("Employee id : {0} Employee name : {1} Employee Age {2}",Id,Name,Age);
        }
        internal void UpdateAge(ref int age)
        {
            age++;
            Age = age;
            
            Console.WriteLine("Age updated");
        }
        internal bool CheckAge(out string message)
        {
            //if (Age > 18)
            //    return true;
            //else return false;
            if (Age < 18)
            {
                message = "Too young to work";
                return false;
            }
            else if(Age>56)
            {
                message = "Too old to work";
                return false;
            }
            else
            {
                message = "Right age to work";
                return true;
            }
           // return Age > 18 ? true : false;
        }

    }
}
-------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApp
{
    internal class Employee
    {
        internal int something;
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public Employee()//Default constructor
        {
            
        }
        public Employee(int id, string name, int age) //Parameterized constructor
        {
            Id = id;
            Name = name;
            Age = age;
        }
        internal void PrintEmployeeDetails()
        {
            Console.WriteLine("Employee id : {0} Employee name : {1} Employee Age {2}",Id,Name,Age);
        }
        internal void UpdateAge(ref int age)
        {
            age++;
            Age = age;
            
            Console.WriteLine("Age updated");
        }
        internal bool CheckAge(out string message)
        {
            //if (Age > 18)
            //    return true;
            //else return false;
            if (Age < 18)
            {
                message = "Too young to work";
                return false;
            }
            else if(Age>56)
            {
                message = "Too old to work";
                return false;
            }
            else
            {
                message = "Right age to work";
                return true;
            }
           // return Age > 18 ? true : false;
        }
        internal void ChangeName(string name="XYZ")
        {
            Name = name;
        }
        internal void SendRandaomMessage(params object[] args)
        {
            for (int i = 0; i < args.Length; i++)
            {
                Console.WriteLine(args[i]);
            }
        }
    }
}
------------------------------
namespace UnderstandingOOPSApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //int eage = 0;
            //Console.WriteLine("Please enter the new age");
            //eage = Convert.ToInt32(Console.ReadLine());
            Employee employee = new Employee(101, "Ramu", 23);
            //employee.ChangeName();
            //employee.PrintEmployeeDetails();
            //string data;
            //bool res = employee.CheckAge(out data);
            //Console.WriteLine("The employee's age is eligible for work "+res);
            //Console.WriteLine(data);
            ////employee.UpdateAge( ref eage);

            // Console.WriteLine("Age after the method call in t he calling method "+eage);
            employee.SendRandaomMessage("Hello", 123, "Welcome", 23.4f, true, 90.3, "Bye");


        }
    }
}

------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace UnderstandingOOPSApp
{
    internal class Salary
    {
        internal virtual double CalculateSalary(double basic,double deductions)
        {
            double result = basic - deductions;
            return result;
        }
    }
    internal class ExecutiveSalary: Salary
    {
        internal override double CalculateSalary(double basic, double deductions)
        {
            double result = basic - (basic * 10 / 100);
            result = result - deductions;
            return result;
        }
    }
}
------------------------------
namespace UnderstandingOOPSApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //int eage = 0;
            //Console.WriteLine("Please enter the new age");
            //eage = Convert.ToInt32(Console.ReadLine());
            Employee employee = new Employee(101, "Ramu", 23);
            //employee.ChangeName();
            //employee.PrintEmployeeDetails();
            //string data;
            //bool res = employee.CheckAge(out data);
            //Console.WriteLine("The employee's age is eligible for work "+res);
            //Console.WriteLine(data);
            ////employee.UpdateAge( ref eage);

            // Console.WriteLine("Age after the method call in t he calling method "+eage);
            //employee.SendRandaomMessage("Hello", 123, "Welcome", 23.4f, true, 90.3, "Bye");
            //employee.ChangeEmployeeAge(23, -1);
            //employee.PrintEmployeeDetails();
            Salary salary = new ExecutiveSalary();
            double netSal = salary.CalculateSalary(10000, 1000);
            //Console.WriteLine("YOu are normal category and your salary is "+netSal);
            Console.WriteLine("YOu are executive category and your salary is " + netSal);
        }
    }
}

