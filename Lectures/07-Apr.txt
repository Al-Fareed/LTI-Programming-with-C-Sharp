namespace LINQApp
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //scores table - field name - score
            int[] scores = { 34, 90, 76, 56, 71, 83, 100 };
            //List<int> myScores = new List<int>();
            //for (int i = 0; i < scores.Length; i++)
            //{
            //    if (scores[i]>75)
            //        myScores.Add(scores[i]);
            //}
            //select scoreÂ from scores where score>75
            //var myScores = from s in scores where s>75 select s;//LINQ
            IEnumerable<int> myScores = scores.Where(s => s > 75);
            Console.WriteLine("The scores that are above 75 are");
            foreach (int i in myScores)
            {
                Console.WriteLine(i);
            }
        }
    }
}


-----------------------------------------
namespace LINQApp
{
    internal class Program
    {
        static List<Student> students = new List<Student>
        {
            new Student {First="Svetlana", Last="Omelchenko", ID=111, Scores= new List<int> {97, 92, 81, 60}},
            new Student {First="Claire", Last="O'Donnell", ID=112, Scores= new List<int> {75, 84, 91, 39}},
            new Student {First="Sven", Last="Mortensen", ID=113, Scores= new List<int> {88, 94, 65, 91}},
            new Student {First="Cesar", Last="Garcia", ID=114, Scores= new List<int> {97, 89, 85, 82}},
            new Student {First="Debra", Last="Garcia", ID=115, Scores= new List<int> {35, 72, 91, 70}},
            new Student {First="Fadi", Last="Fakhouri", ID=116, Scores= new List<int> {99, 86, 90, 94}},
            new Student {First="Hanying", Last="Feng", ID=117, Scores= new List<int> {93, 92, 80, 87}},
            new Student {First="Hugo", Last="Garcia", ID=118, Scores= new List<int> {92, 90, 83, 78}},
            new Student {First="Lance", Last="Tucker", ID=119, Scores= new List<int> {68, 79, 88, 92}},
            new Student {First="Terry", Last="Adams", ID=120, Scores= new List<int> {99, 82, 81, 79}},
            new Student {First="Eugene", Last="Zabokritski", ID=121, Scores= new List<int> {96, 85, 91, 60}},
            new Student {First="Michael", Last="Tucker", ID=122, Scores= new List<int> {94, 92, 91, 91}}
        };

        static void Main(string[] args)
        {
           // var myStudents = from student in students where student.First.Contains("la") select student;
              // var myStudents = students
                                .Where(student => student.First.ToUpper().Contains("LA"))
                                .OrderBy(student => student.First);
						var myStudents = students.Where(stu => stu.Scores[0] > 80 && stu.Scores[1] > 80).OrderBy(s => s.First);
            foreach (var item in myStudents)
            {
                Console.WriteLine(item);
            }
        }
    }
    public class Student
    {
        public string First { get; set; }
        public string Last { get; set; }
        public int ID { get; set; }
        public List<int> Scores;
        public override string ToString()
        {
            return "Id : " + ID + " Name " + First + " " + Last;
        }
    }
}
------------------------
namespace LINQApp
{
    internal class Program
    {
        static List<Student> students = new List<Student>
        {
            new Student {First="Svetlana", Last="Omelchenko", ID=111, Scores= new List<int> {97, 92, 81, 60}},
            new Student {First="Claire", Last="O'Donnell", ID=112, Scores= new List<int> {75, 84, 91, 39}},
            new Student {First="Sven", Last="Mortensen", ID=113, Scores= new List<int> {88, 94, 65, 91}},
            new Student {First="Cesar", Last="Garcia", ID=114, Scores= new List<int> {97, 89, 85, 82}},
            new Student {First="Debra", Last="Garcia", ID=115, Scores= new List<int> {35, 72, 91, 70}},
            new Student {First="Fadi", Last="Fakhouri", ID=116, Scores= new List<int> {99, 86, 90, 94}},
            new Student {First="Hugo", Last="Feng", ID=117, Scores= new List<int> {93, 92, 80, 87}},
            new Student {First="Hugo", Last="Garcia", ID=118, Scores= new List<int> {92, 90, 83, 78}},
            new Student {First="Lance", Last="Tucker", ID=119, Scores= new List<int> {68, 79, 88, 92}},
            new Student {First="Terry", Last="Adams", ID=120, Scores= new List<int> {99, 82, 81, 79}},
            new Student {First="Eugene", Last="Zabokritski", ID=121, Scores= new List<int> {96, 85, 91, 60}},
            new Student {First="Michael", Last="Tucker", ID=122, Scores= new List<int> {94, 92, 91, 91}}
        };

        static void Main(string[] args)
        {
            //var myStudents = from student in students where student.First.ToUpper().Contains("LA") orderby student.First select student;
            //var myStudents = students
            //                    .Where(student => student.First.ToUpper().Contains("LA"))
            //                    .OrderBy(student => student.First);
            //var myStudents = students.Where(stu => stu.Scores[0] > 80 && stu.Scores[1] > 80).OrderBy(s => s.First);
            var myStudents = students.OrderBy(s=>s.First).ThenBy(s=>s.Last);
            foreach (var item in myStudents)
            {
                Console.WriteLine(item);
            }
        }
    }
    public class Student
    {
        public string First { get; set; }
        public string Last { get; set; }
        public int ID { get; set; }
        public List<int> Scores;
        public override string ToString()
        {
            return "Id : " + ID + " Name " + First + " " + Last;
        }
    }
}
namespace LINQApp
{
    internal class Program
    {
        static List<Student> students = new List<Student>
        {
            new Student {First="Svetlana", Last="Omelchenko", ID=111, Scores= new List<int> {97, 92, 81, 60}},
            new Student {First="Claire", Last="O'Donnell", ID=112, Scores= new List<int> {75, 84, 91, 39}},
            new Student {First="Sven", Last="Mortensen", ID=113, Scores= new List<int> {88, 94, 65, 91}},
            new Student {First="Cesar", Last="Garcia", ID=114, Scores= new List<int> {97, 89, 85, 82}},
            new Student {First="Debra", Last="Garcia", ID=115, Scores= new List<int> {35, 72, 91, 70}},
            new Student {First="Fadi", Last="Fakhouri", ID=116, Scores= new List<int> {99, 86, 90, 94}},
            new Student {First="Hugo", Last="Feng", ID=117, Scores= new List<int> {93, 92, 80, 87}},
            new Student {First="Hugo", Last="Garcia", ID=118, Scores= new List<int> {92, 90, 83, 78}},
            new Student {First="Lance", Last="Tucker", ID=119, Scores= new List<int> {68, 79, 88, 92}},
            new Student {First="Terry", Last="Adams", ID=120, Scores= new List<int> {99, 82, 81, 79}},
            new Student {First="Eugene", Last="Zabokritski", ID=121, Scores= new List<int> {96, 85, 91, 60}},
            new Student {First="Michael", Last="Tucker", ID=122, Scores= new List<int> {94, 92, 91, 91}}
        };
        static List<Product> products = new List<Product>
        {
            new Product { Name = "Cola", CategoryId = 0 },
            new Product { Name = "Tea", CategoryId = 0 },
            new Product { Name = "Apple", CategoryId = 1 },
            new Product { Name = "Kiwi", CategoryId = 1 },
            new Product { Name = "Carrot", CategoryId = 2 },
        };

        static List<Category> categories = new List<Category>
        {
            new Category { Id = 0, CategoryName = "Beverage" },
            new Category { Id = 1, CategoryName = "Fruit" },
            new Category { Id = 2, CategoryName = "Vegetable" }
        };

        static void Main(string[] args)
        {
            //var myProducts = from prod in products 
            //                 group prod by prod.CategoryId into categoryGroup 
            //                 select categoryGroup;
            var myProducts = products.GroupBy(p => p.CategoryId);
            foreach (var categoryProducts in myProducts)
            {
                Console.WriteLine("Category Id "+categoryProducts.Key);
                foreach (var prod in categoryProducts)
                {
                    Console.WriteLine(prod.Name);
                }
            }
        }
    }
    class Product
    {
        public string Name { get; set; }
        public int CategoryId { get; set; }
    }

    class Category
    {
        public int Id { get; set; }
        public string CategoryName { get; set; }
    }

    public class Student
    {
        public string First { get; set; }
        public string Last { get; set; }
        public int ID { get; set; }
        public List<int> Scores;
        public override string ToString()
        {
            return "Id : " + ID + " Name " + First + " " + Last;
        }
    }
}


namespace LINQApp
{
    internal class Program
    {
        static List<Student> students = new List<Student>
        {
            new Student {First="Svetlana", Last="Omelchenko", ID=111, Scores= new List<int> {97, 92, 81, 60}},
            new Student {First="Claire", Last="O'Donnell", ID=112, Scores= new List<int> {75, 84, 91, 39}},
            new Student {First="Sven", Last="Mortensen", ID=113, Scores= new List<int> {88, 94, 65, 91}},
            new Student {First="Cesar", Last="Garcia", ID=114, Scores= new List<int> {97, 89, 85, 82}},
            new Student {First="Debra", Last="Garcia", ID=115, Scores= new List<int> {35, 72, 91, 70}},
            new Student {First="Fadi", Last="Fakhouri", ID=116, Scores= new List<int> {99, 86, 90, 94}},
            new Student {First="Hugo", Last="Feng", ID=117, Scores= new List<int> {93, 92, 80, 87}},
            new Student {First="Hugo", Last="Garcia", ID=118, Scores= new List<int> {92, 90, 83, 78}},
            new Student {First="Lance", Last="Tucker", ID=119, Scores= new List<int> {68, 79, 88, 92}},
            new Student {First="Terry", Last="Adams", ID=120, Scores= new List<int> {99, 82, 81, 79}},
            new Student {First="Eugene", Last="Zabokritski", ID=121, Scores= new List<int> {96, 85, 91, 60}},
            new Student {First="Michael", Last="Tucker", ID=122, Scores= new List<int> {94, 92, 91, 91}}
        };
        static List<Product> products = new List<Product>
        {
            new Product { Name = "Cola", CategoryId = 0 },
            new Product { Name = "Tea", CategoryId = 0 },
            new Product { Name = "Apple", CategoryId = 1 },
            new Product { Name = "Kiwi", CategoryId = 1 },
            new Product { Name = "Carrot", CategoryId = 2 },
        };

        static List<Category> categories = new List<Category>
        {
            new Category { Id = 0, CategoryName = "Beverage" },
            new Category { Id = 1, CategoryName = "Fruit" },
            new Category { Id = 2, CategoryName = "Vegetable" }
        };

        static void Main(string[] args)
        {
            var productDetails = from product in products
                                 join category in categories
                                 on product.CategoryId equals category.Id
                                 select new { ProductName = product.Name, CategoryName = category.CategoryName };
             var productDetails = products
                                .Join(categories, 
                                        prod => prod.CategoryId, 
                                        catg => catg.Id,
                                        (prod,catg)=> new
                                                        {
                                                            ProductName = prod.Name,
                                                            CategoryName = catg.CategoryName
                                                        });
            foreach (var item in productDetails)
            {
                Console.WriteLine(item.ProductName+"\t"+item.CategoryName);
            }
        }
    }
    class Product
    {
        public string Name { get; set; }
        public int CategoryId { get; set; }
    }

    class Category
    {
        public int Id { get; set; }
        public string CategoryName { get; set; }
    }

    public class Student
    {
        public string First { get; set; }
        public string Last { get; set; }
        public int ID { get; set; }
        public List<int> Scores;
        public override string ToString()
        {
            return "Id : " + ID + " Name " + First + " " + Last;
        }
    }
}